/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw3(PApplet appc, GWinData data) { //_CODE_:window3:221301:
  appc.background(230);
} //_CODE_:window3:221301:

public void startSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:startSlider:692508:
  startX = startSlider.getValueI();
  paused = true;
} //_CODE_:startSlider:692508:

public void UserInterfaceChanged(GTextField source, GEvent event) { //_CODE_:UserInterface:405455:
} //_CODE_:UserInterface:405455:

public void stepSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:stepSlider:917942:
  stepSize = stepSlider.getValueI();
  paused = true;
} //_CODE_:stepSlider:917942:

public void cgSpeedSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:cgSpeedSlider:729517:
  cgSpeed = cgSpeedSlider.getValueI();
  paused = true;
} //_CODE_:cgSpeedSlider:729517:

public void daSpeedSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:daSpeedSlider:945608:
  daSpeed = daSpeedSlider.getValueI();
  paused = true;
} //_CODE_:daSpeedSlider:945608:

public void resetClicked(GButton source, GEvent event) { //_CODE_:reset:335298:
  reset();
  paused = false;
} //_CODE_:reset:335298:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window3 = GWindow.getWindow(this, "Window title", 0, 0, 300, 300, JAVA2D);
  window3.noLoop();
  window3.setActionOnClose(G4P.KEEP_OPEN);
  window3.addDrawHandler(this, "win_draw3");
  startSlider = new GCustomSlider(window3, 130, 90, 150, 45, "grey_blue");
  startSlider.setShowValue(true);
  startSlider.setLimits(1000, 200, 1400);
  startSlider.setNbrTicks(14);
  startSlider.setShowTicks(true);
  startSlider.setNumberFormat(G4P.INTEGER, 0);
  startSlider.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  startSlider.setOpaque(true);
  startSlider.addEventHandler(this, "startSliderChanged");
  UserInterface = new GTextField(window3, 10, 10, 280, 25, G4P.SCROLLBARS_NONE);
  UserInterface.setText("Welcome to the control center! Change any values!");
  UserInterface.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  UserInterface.setOpaque(true);
  UserInterface.addEventHandler(this, "UserInterfaceChanged");
  label4 = new GLabel(window3, 10, 100, 110, 25);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Starting Position");
  label4.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label4.setOpaque(true);
  stepSlider = new GCustomSlider(window3, 130, 140, 150, 45, "grey_blue");
  stepSlider.setShowValue(true);
  stepSlider.setLimits(60, 20, 100);
  stepSlider.setNbrTicks(8);
  stepSlider.setShowTicks(true);
  stepSlider.setNumberFormat(G4P.INTEGER, 0);
  stepSlider.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  stepSlider.setOpaque(true);
  stepSlider.addEventHandler(this, "stepSliderChanged");
  label5 = new GLabel(window3, 25, 150, 80, 25);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Step Size");
  label5.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  label5.setOpaque(true);
  cgSpeedSlider = new GCustomSlider(window3, 130, 190, 150, 45, "grey_blue");
  cgSpeedSlider.setShowValue(true);
  cgSpeedSlider.setLimits(5, 2, 20);
  cgSpeedSlider.setNbrTicks(11);
  cgSpeedSlider.setShowTicks(true);
  cgSpeedSlider.setNumberFormat(G4P.INTEGER, 0);
  cgSpeedSlider.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  cgSpeedSlider.setOpaque(true);
  cgSpeedSlider.addEventHandler(this, "cgSpeedSliderChanged");
  label6 = new GLabel(window3, 10, 200, 110, 30);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Constant Growth Bot Speed");
  label6.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  label6.setOpaque(true);
  daSpeedSlider = new GCustomSlider(window3, 130, 240, 150, 45, "grey_blue");
  daSpeedSlider.setShowValue(true);
  daSpeedSlider.setLimits(5, 2, 20);
  daSpeedSlider.setNbrTicks(11);
  daSpeedSlider.setShowTicks(true);
  daSpeedSlider.setNumberFormat(G4P.INTEGER, 0);
  daSpeedSlider.setOpaque(true);
  daSpeedSlider.addEventHandler(this, "daSpeedSliderChanged");
  label7 = new GLabel(window3, 10, 245, 115, 30);
  label7.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label7.setText("Doubling Algorithm Bot Speed");
  label7.setOpaque(true);
  reset = new GButton(window3, 110, 45, 80, 30);
  reset.setText("Reset");
  reset.setLocalColorScheme(GCScheme.RED_SCHEME);
  reset.addEventHandler(this, "resetClicked");
  window3.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window3;
GCustomSlider startSlider; 
GTextField UserInterface; 
GLabel label4; 
GCustomSlider stepSlider; 
GLabel label5; 
GCustomSlider cgSpeedSlider; 
GLabel label6; 
GCustomSlider daSpeedSlider; 
GLabel label7; 
GButton reset; 
